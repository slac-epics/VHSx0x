# EPICS Template for iSeg VHSx0x Software Interlock
#
# This template can be used if a software interlock is needed
# to turn off HV and to clear the kill signals when the interlock clears.
#
# To use, you can either use a substitutions file to supply the needed macro definitions,
# or just make a copy of this file and customize it to fill in the macro names.
#
# Required Macro Definitions
# Interlock		- Name of this interlock record
# Desc			- Description of the purpose of this interlock record
# DEV			- Device name,	for example AMO:R13:IOC:14:VHS3
# InterlockPV	- Name of binary PV that triggers interlock (high = OK, low = Inhibit)
# tyInterlockPV	- Type for InterlockPV (ENUM, LONG, CHAR, ... )
# AutoEnable	- True to auto-clear kill signals when interlock is OK
# AutoOn		- True to auto turn on channels when interlock is OK
# Chan0			- Channel 0 name, set to "" if channel not controlled by this interlock
# Chan1			- Channel 1 name, set to "" if channel not controlled by this interlock
# Chan2			- Channel 2 name, set to "" if channel not controlled by this interlock
# Chan3			- Channel 3 name, set to "" if channel not controlled by this interlock
# FwdLink		- Name of forward link, if any.  Set to "" if unused.
#

# Subroutine Inputs
# INPA:	Interlock PV, high = OK, low = Inhibit
# INPB:	Name of VHS Device
# INPC:	Name of VHS Channel 0, "" if not inhibited by this interlock
# INPD:	Name of VHS Channel 1, "" if not inhibited by this interlock
# INPE:	Name of VHS Channel 2, "" if not inhibited by this interlock
# INPF:	Name of VHS Channel 3, "" if not inhibited by this interlock
# INPG:	AutoClear, Set to "1" to automatically clear kill signals
# INPH:	AutoOn, Set to "1" to automatically turn HV ON when interlock clears

record( stringin, "$(DEV):NAME" )
{
	field( VAL, "$(DEV)" )
}

record( stringin, "$(Chan0):NAME" )
{
	field( VAL, "$(Chan0)" )
}

record( stringin, "$(Chan1):NAME" )
{
	field( VAL, "$(Chan1)" )
}

record( stringin, "$(Chan2):NAME" )
{
	field( VAL, "$(Chan2)" )
}

record( stringin, "$(Chan3):NAME" )
{
	field( VAL, "$(Chan3)" )
}
 
record( longout, "$(IOC):genSubPriorInterlock" )
{
  field( VAL,  "-1" )
}


record( genSub, "$(Interlock)" )
{
  field( DESC, "$(Desc)" )
  field( SCAN, "$(tyScan)" )
  field( PINI, "YES" )
  field( INAM, "InterlockInit" )
  field( SNAM, "InterlockProcess" )
  field( INPA, "$(InterlockPV)" )
  field( FTA,  "$(tyInterlockPV)" )
  field( INPB, "$(DEV):NAME" )
  field( FTB,  "STRING" )
  field( INPC, "$(Chan0):NAME" )
  field( FTC,  "STRING" )
  field( INPD, "$(Chan1):NAME" )
  field( FTD,  "STRING" )
  field( INPE, "$(Chan2):NAME" )
  field( FTE,  "STRING" )
  field( INPF, "$(Chan3):NAME" )
  field( FTF,  "STRING" )
  field( INPG, "$(AutoClear)" )
  field( FTG,  "LONG" )
  field( INPH, "$(AutoOn)" )
  field( FTH,  "LONG" )
  field( INPO, "$(IOC):genSubPriorInterlock NPP" )
  field( FTO,  "$(tyInterlockPV)" )
  field( OUTO, "$(IOC):genSubPriorInterlock PP" )
  field( FTVO,  "LONG" )
  field( FLNK, "$(FwdLink)" )
}

