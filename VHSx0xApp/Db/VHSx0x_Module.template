#! Generated by VisualDCT v2.5
#! DBDSTART
#! DBDEND

# EPICS Template for iSeg VHSx0x module
# Required Macro Definitions
#	MODULE			# Module name,	for example AMO:R13:IOC:14:VHS3
#	CARD			# VHSx0x Card Number (0, 1, 2, ...)
#	V_MAX			# Maximum nominal voltage for module (absolute value)
#	POLARITY		# 1 for pos voltage, -1 for neg voltage
# Optional Macro Definitions
#	RAMP_SPEED_HI	# Maximum ramp speed ( % range per sec, default = 20% )
#	RAMP_SPEED_LO	# Minimum ramp speed ( % range per sec, default = 1%, >= 1mV/sec )

# ModuleStatus bits
#define VHSX0X_MODULE_STATUS_BIT_KILL_ENABLE      0x8000
#define VHSX0X_MODULE_STATUS_BIT_TEMP_GOOD        0x4000
#define VHSX0X_MODULE_STATUS_BIT_SUPPLY_GOOD      0x2000
#define VHSX0X_MODULE_STATUS_BIT_MODULE_GOOD      0x1000
#define VHSX0X_MODULE_STATUS_BIT_EVENT_ACTIVE     0x0800
#define VHSX0X_MODULE_STATUS_BIT_SAFETY_LOOP_GOOD 0x0400
#define VHSX0X_MODULE_STATUS_BIT_NO_RAMP          0x0200
#define VHSX0X_MODULE_STATUS_BIT_NO_SUM_ERROR     0x0100
#define VHSX0X_MODULE_STATUS_BIT_COMMAND_COMPLETE 0x0080
#define VHSX0X_MODULE_STATUS_BIT_SPECIAL_MODE     0x0040
#define VHSX0X_MODULE_STATUS_BIT_INPUT_ERROR      0x0020
#define VHSX0X_MODULE_STATUS_BIT_SERVICE_NEEDED   0x0010
#define VHSX0X_MODULE_STATUS_BIT_RESERVED         0x0008
#define VHSX0X_MODULE_STATUS_BIT_IN_STOP_STATE    0x0004
#define VHSX0X_MODULE_STATUS_BIT_INTERLOCK_OUTPUT 0x0002
#define VHSX0X_MODULE_STATUS_BIT_FINE_ADJUSTMENT  0x0001

record(mbbiDirect, "$(MODULE):ModuleStatus")
{
  field(DESC, "Module Status")
  field(SCAN, ".1 second")
  field(DTYP, "VHSx0x")
  field(INP, "#C$(CARD) S0 @ModuleStatus")
  field(FLNK, "$(MODULE):ModuleStatusFanout" )
}

record(bo, "$(MODULE):ModuleKillEnable" )
{
        field( DESC, "Module Kill Enable Status" )
        field( DOL,  "$(MODULE):ModuleStatus.BE NPP" )
        field( OMSL, "closed_loop" )
        field( ZNAM, "No Kill Enabled" )
        field( ONAM, "Kill Enabled" )
        field( ZSV,  "NO_ALARM")
        field( OSV,  "MAJOR")
}

record( fanout, "$(MODULE):ModuleStatusFanout" )
{
	field( LNK1,	"$(MODULE):ModuleIsOKCalc PP MS" )
	field( LNK2,	"$(MODULE):ModuleTempOKCalc PP MS" )
	field( LNK3,	"$(MODULE):SafetyLoopOKCalc PP MS" )
	field( LNK4,	"$(MODULE):ModuleKillEnable PP MS" )
}

record(calcout, "$(MODULE):ModuleIsOKCalc" )
{
	field( DESC, "True when Module is OK" )
	field( INPA, "$(MODULE):ModuleStatus NPP MS" )
	field( CALC, "(A & 0x7500) == 0x7500 ? 1 : 0" )
	field( OUT,  "$(MODULE):ModuleIsOK PP MS" )
}

record(bo, "$(MODULE):ModuleIsOK" )
{
	field( DESC, "True when Module is OK" )
	field( ZNAM, "Fault" )
	field( ZSV,	 "MAJOR" )
	field( ONAM, "OK" )
	field( OSV,	 "NO_ALARM" )
}

record(calcout, "$(MODULE):ModuleTempOKCalc" )
{
	field( DESC, "True when Module Temp is OK" )
	field( INPA, "$(MODULE):ModuleStatus NPP MS" )
	field( CALC, "(A & 0x4000) ? 1 : 0" )
	field( OUT,	 "$(MODULE):ModuleTempOK PP MS" )
}

record(bo, "$(MODULE):ModuleTempOK" )
{
	field( DESC, "True when Module Temp is On" )
	field( ZNAM, "Hot!" )
	field( ZSV,	 "MAJOR" )
	field( ONAM, "OK" )
	field( OSV,	 "NO_ALARM" )
}

record(calcout, "$(MODULE):SafetyLoopOKCalc" )
{
	field( DESC, "True when Safety Loop is OK" )
	field( INPA, "$(MODULE):ModuleStatus NPP MS" )
	field( CALC, "(A & 0x0400) ? 1 : 0" )
	field( OUT,	 "$(MODULE):SafetyLoopOK PP MS" )
}

record(bo, "$(MODULE):SafetyLoopOK" )
{
	field( DESC, "True when Safety Loop is OK" )
	field( ZNAM, "Fault!" )
	field( ZSV,	 "MAJOR" )
	field( ONAM, "OK" )
	field( OSV,	 "NO_ALARM" )
}

record(bo, "$(MODULE):ModuleControlKILena")
{
  field(DESC, "Enable Kill")
  field(DTYP, "VHSx0x")
  field(OUT, "#C$(CARD) S0 @ModuleControlKILena")
  field(ZNAM, "Disable")
  field(ONAM, "Enable")
}

record(bo, "$(MODULE):ModuleControlCLEAR")
{
  field(DESC, "Clear Kill")
  field(DTYP, "VHSx0x")
  field(OUT, "#C$(CARD) S0 @ModuleControlCLEAR")
  field(ZNAM, "Clear")
  field(ONAM, "Clear")
}

record(ao, "$(MODULE):VoltageRampSpeed")
{
  field(DESC, "VoltageRampSpeed")
  field(DTYP, "VHSx0x")
  field(OUT, "#C$(CARD) S0 @VoltageRampSpeed")
  field(DRVH, $(RAMP_SPEED_HI=20) )
  field(DRVL, $(RAMP_SPEED_LO="0.001") )
  field(HOPR, $(RAMP_SPEED_HI=20) )
  field(LOPR, $(RAMP_SPEED_LO="0.001") )
  field(EGU, "%")
}

record(ai, "$(MODULE):VoltageMax")
{
  field(DESC, "VoltageMax")
  field(SCAN, "1 second")
  field(DTYP, "VHSx0x")
  field(INP, "#C$(CARD) S0 @VoltageMax")
  field(HOPR, "100")
  field(LOPR, "0")
  field(EGU, "%")
}

record(ai, "$(MODULE):CurrentMax")
{
  field(DESC, "CurrentMax")
  field(SCAN, "1 second")
  field(DTYP, "VHSx0x")
  field(INP, "#C$(CARD) S0 @CurrentMax")
  field(HOPR, "100")
  field(LOPR, "0")
  field(EGU, "%")
}

record(ai, "$(MODULE):SupplyP5")
{
  field(DESC, "Supply +5V")
  field(SCAN, "1 second")
  field(DTYP, "VHSx0x")
  field(INP, "#C$(CARD) S0 @SupplyP5")
  field(PREC, "3")
  field(EGU, "V")
  field(HOPR, "10")
  field(LOPR, "0")
  field(HIHI, "5.5")
  field(HIGH, "5.2")
  field(LOW, "4.8")
  field(LOLO, "4.5")
  field(HHSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(LLSV, "MAJOR")
}

record(ai, "$(MODULE):SupplyP12")
{
  field(DESC, "Supply +12V")
  field(SCAN, "1 second")
  field(DTYP, "VHSx0x")
  field(INP, "#C$(CARD) S0 @SupplyP12")
  field(PREC, "3")
  field(EGU, "V")
  field(HOPR, "18")
  field(LOPR, "0")
  field(HIHI, "12.7")
  field(HIGH, "12.4")
  field(LOW, "11.7")
  field(LOLO, "11.4")
  field(HHSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(LLSV, "MAJOR")
}

record(ai, "$(MODULE):SupplyN12")
{
  field(DESC, "Supply -12V")
  field(SCAN, "1 second")
  field(DTYP, "VHSx0x")
  field(INP, "#C$(CARD) S0 @SupplyN12")
  field(PREC, "3")
  field(EGU, "V")
  field(HOPR, "-18")
  field(LOPR, "0")
  field(HIHI, "-11.4")
  field(HIGH, "-11.7")
  field(LOW, "-12.5")
  field(LOLO, "-12.8")
  field(HHSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(LLSV, "MAJOR")
}

record(ai, "$(MODULE):Temperature")
{
  field(DESC, "Temperature")
  field(SCAN, "1 second")
  field(DTYP, "VHSx0x")
  field(INP, "#C$(CARD) S0 @Temperature")
  field(PREC, "2")
  field(EGU, "C")
  field(HOPR, "80")
  field(LOPR, "-40")
  field(HIHI, "45")
  field(HIGH, "40")
  field(LOW, "0")
  field(LOLO, "-20")
  field(HHSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(LLSV, "MAJOR")
}

record(bo, "$(MODULE):AllChannelEMCY")
{
  field(DESC, "All Channel Emergency Off")
  field(DTYP, "VHSx0x")
  field(OUT, "#C$(CARD) S0 @AllChannelEMCY")
  field(ZNAM, "Off")
  field(ONAM, "Emergency Off")
  field(OSV, "MINOR")
}

record(bo, "$(MODULE):AllChannelOnOff")
{
  field(DESC, "All Channel OnOff")
#  field(DTYP, "VHSx0x")
#  field(OUT, "#C$(CARD) S0 @AllChannelOnOff")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field( FLNK, "$(MODULE):AllChannelOnOffFanOut PP" )
}

record(dfanout, "$(MODULE):AllChannelOnOffFanOut" )
{
  field( DESC, "Channel OnOff" )
  field( OMSL, "closed_loop" )
  field( DOL,  "$(MODULE):AllChannelOnOff NPP" )
  field( PINI, "NO" )
  field( OUTA, "$(MODULE):CH0:ChannelControlOnOff PP" )
  field( OUTB, "$(MODULE):CH1:ChannelControlOnOff PP" )
  field( OUTC, "$(MODULE):CH2:ChannelControlOnOff PP" )
  field( OUTD, "$(MODULE):CH3:ChannelControlOnOff PP" )
}

record(stringin, "$(MODULE):DeviceInfo")
{
  field(DESC, "DeviceInfo")
  field(DTYP, "VHSx0x")
  field(INP, "#C$(CARD) S0 @DeviceInfo")
  field(PINI, "YES")
}

# Pick nice 1, 2, 5... sequence for Ramp
record(mbbo, "$(MODULE):VoltageRampSteps")
{
  field(DESC, "Pick nice  sequence for Ramp")
  field(ZRVL, "1")
  field(ONVL, "2")
  field(TWVL, "5")
  field(THVL, "10")
  field(FRVL, "20")
  field(ZRST, "1")
  field(ONST, "2")
  field(TWST, "5")
  field(THST, "10")
  field(FRST, "20")
  field(PINI, "YES")
  field(DTYP, "Raw Soft Channel")
  field(OUT, "$(MODULE):VoltageRampSpeed PP")
}

record( ao, "$(MODULE):RatedVoltage" )
{
  field( DESC, "RatedVoltage" )
  field( SCAN, "Passive" )
  field( DOL, "$(V_MAX)" )
  field( EGU, "V" )
}

record(longout, "$(MODULE):Polarity")
{
  field( DESC,	"V. Polarity (1 or -1)" )
  field( DOL,	"$(POLARITY)"	)
}

#! Further lines contain data used by VisualDCT
#! View(0,0,1.0)
#! Record("$(MODULE):ModuleStatus",20,28,0,0,"$(MODULE):ModuleStatus")
#! Record("$(MODULE):ModuleControlKILena",20,174,0,0,"$(MODULE):ModuleControlKILena")
#! Record("$(MODULE):ModuleControlCLEAR",20,334,0,0,"$(MODULE):ModuleControlCLEAR")
#! Record("$(MODULE):VoltageRampSpeed",460,99,0,0,"$(MODULE):VoltageRampSpeed")
#! Field("$(MODULE):VoltageRampSpeed.VAL",16777215,0,"$(MODULE):VoltageRampSpeed.VAL")
#! Record("$(MODULE):VoltageMax",860,12,0,0,"$(MODULE):VoltageMax")
#! Record("$(MODULE):CurrentMax",860,192,0,0,"$(MODULE):CurrentMax")
#! Record("$(MODULE):SupplyP5",1060,21,0,0,"$(MODULE):SupplyP5")
#! Record("$(MODULE):SupplyP12",1060,321,0,0,"$(MODULE):SupplyP12")
#! Record("$(MODULE):SupplyN12",680,21,0,0,"$(MODULE):SupplyN12")
#! Record("$(MODULE):Temperature",680,321,0,0,"$(MODULE):Temperature")
#! Record("$(MODULE):AllChannelEMCY",200,500,0,0,"$(MODULE):AllChannelEMCY")
#! Record("$(MODULE):AllChannelOnOff",20,494,0,0,"$(MODULE):AllChannelOnOff")
#! Record("$(MODULE):DeviceInfo",680,608,0,0,"$(MODULE):DeviceInfo")
#! Record("$(MODULE):VoltageRampSteps",200,29,0,1,"$(MODULE):VoltageRampSteps")
#! Field("$(MODULE):VoltageRampSteps.OUT",16777215,1,"$(MODULE):VoltageRampSteps.OUT")
#! Link("$(MODULE):VoltageRampSteps.OUT","$(MODULE):VoltageRampSpeed.VAL")
